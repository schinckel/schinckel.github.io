--- 
wordpress_id: 475
layout: post
title: Functions Rewrite
time: "23:53:31"
date: 2005-10-07 23:53:31
tags: 
- blogsome
- javascript
wordpress_url: http://schinckel.net/2005/10/07/functions-rewrite/
---
I've got a bit of JavaScript in my site: _Quicktags_, _Comment Preview_, _Catchpa_ and _Gravatars_, just to name a few of the recent additions. I've also got some pretty hairy Smarty Code thrown in there too. Some of it would be better off to be replaced by JavaScript. The two main examples of this are the _Time Since_ code (eg: 22 hours, 34 minutes after the fact), and the _Human Time _code (Posted late at night). I've actually rewritten pretty much all of this code, and packaged it all up into one JavaScript, so I can just let other people include one line of code, with some others setting up what features they want, rather than having to wade through the code and find where to add bits. At the moment, most of it is quite functional, but would still require the use of a whole bunch of inline scripting. I'm working to replace this with functions that automatically run after the page has loaded (or, perhaps even better, when the main page has loaded, but before it displays?).  So, for instance, you would just have the following code in your main page, inside the `<head>` section: `<script type="text/javascript" src="http://schinckel.net/images/blogsome.jpg"><script>` And, then in the templates, include a block of text that looks like: `<div class="options" style="display:none;"> gravatar preview quicktags </div>` You can have different features on different templates: the one above would make sense on a comments page, but not on others, for example. There will be robust error checking as to validity of particular features and their applicability on a particular page, but only including features you actually plan to use will make the page load faster. This ultimately should make the page load faster than with all of the inline code, and calls to several external javascripts. I think browsers will cache the `blogsome.jpg` file (it's really a `.js` file, but don't tell anyone), so the initial load time will be reduced on successive page loads. It will also mean I can add or improve features, and fix bugs. The tricky part is turning out to be catering for different layouts: the gravatar part was easy: the only code a user needs to put into their blog is the simple `{capture name=reader}{comment_author_email}{/capture} <div class="gravatar">{$smarty.capture.reader|encode:"hex"}</div>` Where they want the gravatar to appear, and it will work. Setting up for the Catchpa, which is pretty simple, turned out to be a little sticky. It all depends on how people's templates are set up: what the structure of their form looks like. It might be easier to have them insert some HTML code, and then look for that. It makes it a little more work for the user, but more reliable. 
