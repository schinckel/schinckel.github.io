--- 
wordpress_id: 508
layout: post
title: Random Post Link
time: "22:38:16"
date: 2005-10-18 22:38:16
tags: 
- smarty-templates
wordpress_url: http://schinckel.net/2005/10/18/random-post-link/
---
Another Blogsome user wanted a Random Post to be displayed on the home page. I haven't quite figured out how to get the actual post displayed, but a link to a random post should be pretty easy. Luckily, WP-MU uses post ids. If we can get the latest post id, then we should be able to get a random number between 1 and this. We can then check to see if the post exists (it may have been deleted: WP does not reuse post ids), and if it doesn't, get another random number, and keep doing this until we find a post id that is still valid. It's then a simple step to create the permalink. The first problem arises when we try to get the latest post. We could use `{the_author_posts}`, but this will give us the number of posts, which means if the user has deleted n posts, the last n posts will not be in the selection of random posts. This is not necessarily such a bad thing, as it will mean that older posts are likely to be used. The next problem of `{the_author_posts}` is that it must be used within The Loop. If we are planning to put the link before we have been through 'The Loop', then we should be alright. The third issue of `{the_author_posts}` is that with a multi-author blog, the random number will be much lower than the total number of posts, meaning even older posts are only likely to be selected from.  Another option would be to say _"Okay, I want a random post lower in id (ie, older than) every other post on the page."_ This makes things much easier, but is limited to the same problem of not being able to be placed before the loop, as we'll set a variable to the post id on each post as we come to it, and since most blogs are ordered in descending order, the last post visited will (or should) have the lowest id. The problem here is that a category view may have a very low post count, and it's oldest visible post may be a very early post. The third option would be to say _"I want a post that is older than the **newest** post on the page."_ Again, the limit as to where this must appear is present. However, an additional problem is that we may get a link to a post that's already visible. This third one to me seems to be the best compromise. So how do we get this post id? We'll need to modify our `post.html` file under Blogsome. `{capture name=max_id}{the_ID}{/capture} {if $smarty.capture.max_id > $max_id}{assign var=max_id value=$smarty.capture.max_id}{/if}` This code can go anywhere: I stuck it right at the bottom, out of the way. The next part should only be done once: `{math}` is quite processor intensive, so do it just where you want the object to appear: `{math equation="rand(1,n)" assign=rand_post n=$max_id}` Our final code is to grab the permalink and title for this post. However, I cannot yet find a way to get the title, so we are stuck not knowing the post title: <a href="{get_permalink id=$rand_post}">Random Post</a> I've tried using `{get_post}` and `{get_postdata}`, but since the latter returns an Array, it's not much use. Returned Arrays are no good - the value needs to be assigned to a variable for us to be able to access it. It's probably possible to alter the query, or rerun a new query, but I'm getting to tired to do this right now. 
